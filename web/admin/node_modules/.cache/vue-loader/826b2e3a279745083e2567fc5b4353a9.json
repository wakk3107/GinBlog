{"remainingRequest":"C:\\Users\\wakk\\GolandProjects\\GinBlog\\web\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\wakk\\GolandProjects\\GinBlog\\web\\admin\\src\\components\\comment\\commentList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\wakk\\GolandProjects\\GinBlog\\web\\admin\\src\\components\\comment\\commentList.vue","mtime":1651118941000},{"path":"C:\\Users\\wakk\\GolandProjects\\GinBlog\\web\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1659170823565},{"path":"C:\\Users\\wakk\\GolandProjects\\GinBlog\\web\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1659170820870},{"path":"C:\\Users\\wakk\\GolandProjects\\GinBlog\\web\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1659170825069}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBkYXkgZnJvbSAnZGF5anMnCmNvbnN0IGNvbHVtbnMgPSBbCiAgewogICAgdGl0bGU6ICdJRCcsCiAgICBkYXRhSW5kZXg6ICdJRCcsCiAgICB3aWR0aDogJzIlJywKICAgIGtleTogJ2lkJywKICAgIGFsaWduOiAnY2VudGVyJywKICB9LAogIHsKICAgIHRpdGxlOiAn5Yib5bu65pe26Ze0JywKICAgIGRhdGFJbmRleDogJ0NyZWF0ZWRBdCcsCiAgICB3aWR0aDogJzEwJScsCiAgICBrZXk6ICdDcmVhdGVkQXQnLAogICAgYWxpZ246ICdjZW50ZXInLAogICAgY3VzdG9tUmVuZGVyOiAodmFsKSA9PiB7CiAgICAgIHJldHVybiB2YWwgPyBkYXkodmFsKS5mb3JtYXQoJ1lZWVnlubRNTeaciERE5pelIEhIOm1tJykgOiAn5pqC5pegJwogICAgfSwKICB9LAogIHsKICAgIHRpdGxlOiAn6K+E6K665paH56ugJywKICAgIGRhdGFJbmRleDogJ2FydGljbGVfdGl0bGUnLAogICAgd2lkdGg6ICc3JScsCiAgICBrZXk6ICdhcnRpY2xlX3RpdGxlJywKICAgIGFsaWduOiAnY2VudGVyJywKICB9LAogIHsKICAgIHRpdGxlOiAn6K+E6K666ICFJywKICAgIGRhdGFJbmRleDogJ3VzZXJuYW1lJywKICAgIHdpZHRoOiAnNyUnLAogICAga2V5OiAndXNlcm5hbWUnLAogICAgYWxpZ246ICdjZW50ZXInLAogIH0sCiAgewogICAgdGl0bGU6ICfor4TorrrlhoXlrrknLAogICAgZGF0YUluZGV4OiAnY29udGVudCcsCiAgICB3aWR0aDogJzIwJScsCiAgICBrZXk6ICdjb250ZW50JywKICAgIGFsaWduOiAnY2VudGVyJywKICB9LAogIHsKICAgIHRpdGxlOiAn6K+E6K6654q25oCBJywKICAgIGRhdGFJbmRleDogJ3N0YXR1cycsCiAgICB3aWR0aDogJzclJywKICAgIGtleTogJ3N0YXR1cycsCiAgICBhbGlnbjogJ2NlbnRlcicsCiAgICBzY29wZWRTbG90czogeyBjdXN0b21SZW5kZXI6ICdzdGF0dXMnIH0sCiAgfSwKICB7CiAgICB0aXRsZTogJ+aTjeS9nCcsCiAgICB3aWR0aDogJzIwJScsCiAgICBrZXk6ICdhY3Rpb24nLAogICAgYWxpZ246ICdjZW50ZXInLAogICAgc2NvcGVkU2xvdHM6IHsgY3VzdG9tUmVuZGVyOiAnYWN0aW9uJyB9LAogIH0sCl0KZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb21tZW50TGlzdDogW10sCiAgICAgIGNvbW1lbnRJbmZvOiB7CiAgICAgICAgc3RhdHVzOiAxLAogICAgICB9LAogICAgICBwYWdpbmF0aW9uOiB7CiAgICAgICAgcGFnZVNpemVPcHRpb25zOiBbJzUnLCAnMTAnLCAnMjAnXSwKICAgICAgICBwYWdlU2l6ZTogNSwKICAgICAgICB0b3RhbDogMCwKICAgICAgICBzaG93U2l6ZUNoYW5nZXI6IHRydWUsCiAgICAgICAgc2hvd1RvdGFsOiAodG90YWwpID0+IGDlhbEke3RvdGFsfeadoWAsCiAgICAgIH0sCiAgICAgIGNvbHVtbnMsCiAgICAgIHF1ZXJ5UGFyYW06IHsKICAgICAgICBwYWdlc2l6ZTogMTAsCiAgICAgICAgcGFnZW51bTogMSwKICAgICAgfSwKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldENvbW1lbnRMaXN0KCkKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOiOt+WPluivhOiuuuWIl+ihqAogICAgYXN5bmMgZ2V0Q29tbWVudExpc3QoKSB7CiAgICAgIGNvbnN0IHsgZGF0YTogcmVzIH0gPSBhd2FpdCB0aGlzLiRodHRwLmdldCgnY29tbWVudC9saXN0JywgewogICAgICAgIHBhcmFtczogewogICAgICAgICAgcGFnZXNpemU6IHRoaXMucXVlcnlQYXJhbS5wYWdlc2l6ZSwKICAgICAgICAgIHBhZ2VudW06IHRoaXMucXVlcnlQYXJhbS5wYWdlbnVtLAogICAgICAgIH0sCiAgICAgIH0pCgogICAgICBpZiAocmVzLnN0YXR1cyAhPT0gMjAwKSB7CiAgICAgICAgaWYgKHJlcy5zdGF0dXMgPT09IDEwMDQgfHwgMTAwNSB8fCAxMDA2IHx8IDEwMDcpIHsKICAgICAgICAgIHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5jbGVhcigpCiAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2xvZ2luJykKICAgICAgICB9CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMubWVzc2FnZSkKICAgICAgfQogICAgICB0aGlzLmNvbW1lbnRMaXN0ID0gcmVzLmRhdGEKICAgICAgdGhpcy5wYWdpbmF0aW9uLnRvdGFsID0gcmVzLnRvdGFsCiAgICB9LAoKICAgIC8vIOabtOaUueWIhumhtQogICAgaGFuZGxlVGFibGVDaGFuZ2UocGFnaW5hdGlvbiwgZmlsdGVycywgc29ydGVyKSB7CiAgICAgIHZhciBwYWdlciA9IHsgLi4udGhpcy5wYWdpbmF0aW9uIH0KICAgICAgcGFnZXIuY3VycmVudCA9IHBhZ2luYXRpb24uY3VycmVudAogICAgICBwYWdlci5wYWdlU2l6ZSA9IHBhZ2luYXRpb24ucGFnZVNpemUKICAgICAgdGhpcy5xdWVyeVBhcmFtLnBhZ2VzaXplID0gcGFnaW5hdGlvbi5wYWdlU2l6ZQogICAgICB0aGlzLnF1ZXJ5UGFyYW0ucGFnZW51bSA9IHBhZ2luYXRpb24uY3VycmVudAoKICAgICAgaWYgKHBhZ2luYXRpb24ucGFnZVNpemUgIT09IHRoaXMucGFnaW5hdGlvbi5wYWdlU2l6ZSkgewogICAgICAgIHRoaXMucXVlcnlQYXJhbS5wYWdlbnVtID0gMQogICAgICAgIHBhZ2VyLmN1cnJlbnQgPSAxCiAgICAgIH0KICAgICAgdGhpcy5wYWdpbmF0aW9uID0gcGFnZXIKICAgICAgdGhpcy5nZXRDb21tZW50TGlzdCgpCiAgICB9LAoKICAgIC8vIOmAmui/h+WuoeaguAogICAgY29tbWVudENoZWNrKGlkKSB7CiAgICAgIHRoaXMuJGNvbmZpcm0oewogICAgICAgIHRpdGxlOiAn5o+Q56S677ya6K+35YaN5qyh56Gu6K6kJywKICAgICAgICBjb250ZW50OiAn6KaB6YCa6L+H5a6h5qC45ZCX77yfJywKICAgICAgICBvbk9rOiBhc3luYyAoKSA9PiB7CiAgICAgICAgICBjb25zdCB7IGRhdGE6IHJlc19zdGF0dXMgfSA9IGF3YWl0IHRoaXMuJGh0dHAuZ2V0KGBjb21tZW50L2luZm8vJHtpZH1gKQogICAgICAgICAgaWYgKHJlc19zdGF0dXMuZGF0YS5zdGF0dXMgPT09IDEpIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCfor6Xor4Torrrlt7LlpITkuo7mmL7npLrnirbmgIHvvIzml6DpnIDlrqHmoLgnKQogICAgICAgICAgY29uc3QgeyBkYXRhOiByZXMgfSA9IGF3YWl0IHRoaXMuJGh0dHAucHV0KGBjaGVja2NvbW1lbnQvJHtpZH1gLCB7CiAgICAgICAgICAgIHN0YXR1czogMSwKICAgICAgICAgIH0pCiAgICAgICAgICBpZiAocmVzLnN0YXR1cyAhPSAyMDApIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tZXNzYWdlKQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCflrqHmoLjmiJDlip8nKQogICAgICAgICAgdGhpcy5nZXRDb21tZW50TGlzdCgpCiAgICAgICAgfSwKICAgICAgICBvbkNhbmNlbDogKCkgPT4gewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5pbmZvKCflt7Llj5bmtognKQogICAgICAgIH0sCiAgICAgIH0pCiAgICB9LAoKICAgIC8vIOaSpOS4i+ivhOiuugogICAgY29tbWVudFVuY2hlY2soaWQpIHsKICAgICAgdGhpcy4kY29uZmlybSh7CiAgICAgICAgdGl0bGU6ICfmj5DnpLrvvJror7flho3mrKHnoa7orqQnLAogICAgICAgIGNvbnRlbnQ6ICfopoHmkqTkuIvor6Xor4TorrrlkJfvvJ8nLAogICAgICAgIG9uT2s6IGFzeW5jICgpID0+IHsKICAgICAgICAgIGNvbnN0IHsgZGF0YTogcmVzX3N0YXR1cyB9ID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoYGNvbW1lbnQvaW5mby8ke2lkfWApCiAgICAgICAgICBpZiAocmVzX3N0YXR1cy5kYXRhLnN0YXR1cyA9PT0gMikgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+ivpeivhOiuuuW3suWkhOS6juacquWuoeaguOeKtuaAge+8jOaXoOmcgOaSpOS4iycpCiAgICAgICAgICBjb25zdCB7IGRhdGE6IHJlcyB9ID0gYXdhaXQgdGhpcy4kaHR0cC5wdXQoYHVuY2hlY2tjb21tZW50LyR7aWR9YCwgewogICAgICAgICAgICBzdGF0dXM6IDIsCiAgICAgICAgICB9KQogICAgICAgICAgaWYgKHJlcy5zdGF0dXMgIT0gMjAwKSByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMubWVzc2FnZSkKICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn6K+E6K665bey5pKk5LiLJykKICAgICAgICAgIHRoaXMuZ2V0Q29tbWVudExpc3QoKQogICAgICAgIH0sCiAgICAgICAgb25DYW5jZWw6ICgpID0+IHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuaW5mbygn5bey5Y+W5raIJykKICAgICAgICB9LAogICAgICB9KQogICAgfSwKCiAgICAvLyDliKDpmaTor4TorroKICAgIGRlbGV0ZUNvbW1lbnQoaWQpIHsKICAgICAgdGhpcy4kY29uZmlybSh7CiAgICAgICAgdGl0bGU6ICfmj5DnpLrvvJror7flho3mrKHnoa7orqQnLAogICAgICAgIGNvbnRlbnQ6ICfopoHliKDpmaTlkJfvvJ8nLAogICAgICAgIG9uT2s6IGFzeW5jICgpID0+IHsKICAgICAgICAgIGNvbnN0IHsgZGF0YTogcmVzIH0gPSBhd2FpdCB0aGlzLiRodHRwLmRlbGV0ZShgZGVsY29tbWVudC8ke2lkfWApCiAgICAgICAgICBpZiAocmVzLnN0YXR1cyAhPSAyMDApIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tZXNzYWdlKQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfliKDpmaTmiJDlip8nKQogICAgICAgICAgdGhpcy5nZXRDb21tZW50TGlzdCgpCiAgICAgICAgfSwKICAgICAgICBvbkNhbmNlbDogKCkgPT4gewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5pbmZvKCflt7Llj5bmtognKQogICAgICAgIH0sCiAgICAgIH0pCiAgICB9LAogIH0sCn0K"},{"version":3,"sources":["commentList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"commentList.vue","sourceRoot":"src/components/comment","sourcesContent":["<template>\n  <div>\n    <a-card>\n      <a-table\n        rowKey=\"ID\"\n        :columns=\"columns\"\n        :pagination=\"pagination\"\n        :dataSource=\"commentList\"\n        bordered\n        @change=\"handleTableChange\"\n      >\n        <span slot=\"status\" slot-scope=\"data\">{{ data == 1 ? '审核通过' : '未审核' }}</span>\n        <template slot=\"action\" slot-scope=\"data\">\n          <div class=\"actionSlot\">\n            <a-button\n              type=\"primary\"\n              icon=\"edit\"\n              style=\"margin-right: 15px\"\n              @click=\"commentCheck(data.ID)\"\n            >通过审核</a-button>\n            <a-button\n              type=\"primary\"\n              icon=\"info\"\n              style=\"margin-right: 15px\"\n              @click=\"commentUncheck(data.ID)\"\n            >撤下评论</a-button>\n            <a-button\n              type=\"danger\"\n              icon=\"delete\"\n              style=\"margin-right: 15px\"\n              @click=\"deleteComment(data.ID)\"\n            >删除</a-button>\n          </div>\n        </template>\n      </a-table>\n    </a-card>\n  </div>\n</template>\n<script>\nimport day from 'dayjs'\nconst columns = [\n  {\n    title: 'ID',\n    dataIndex: 'ID',\n    width: '2%',\n    key: 'id',\n    align: 'center',\n  },\n  {\n    title: '创建时间',\n    dataIndex: 'CreatedAt',\n    width: '10%',\n    key: 'CreatedAt',\n    align: 'center',\n    customRender: (val) => {\n      return val ? day(val).format('YYYY年MM月DD日 HH:mm') : '暂无'\n    },\n  },\n  {\n    title: '评论文章',\n    dataIndex: 'article_title',\n    width: '7%',\n    key: 'article_title',\n    align: 'center',\n  },\n  {\n    title: '评论者',\n    dataIndex: 'username',\n    width: '7%',\n    key: 'username',\n    align: 'center',\n  },\n  {\n    title: '评论内容',\n    dataIndex: 'content',\n    width: '20%',\n    key: 'content',\n    align: 'center',\n  },\n  {\n    title: '评论状态',\n    dataIndex: 'status',\n    width: '7%',\n    key: 'status',\n    align: 'center',\n    scopedSlots: { customRender: 'status' },\n  },\n  {\n    title: '操作',\n    width: '20%',\n    key: 'action',\n    align: 'center',\n    scopedSlots: { customRender: 'action' },\n  },\n]\nexport default {\n  data() {\n    return {\n      commentList: [],\n      commentInfo: {\n        status: 1,\n      },\n      pagination: {\n        pageSizeOptions: ['5', '10', '20'],\n        pageSize: 5,\n        total: 0,\n        showSizeChanger: true,\n        showTotal: (total) => `共${total}条`,\n      },\n      columns,\n      queryParam: {\n        pagesize: 10,\n        pagenum: 1,\n      },\n    }\n  },\n  created() {\n    this.getCommentList()\n  },\n  methods: {\n    // 获取评论列表\n    async getCommentList() {\n      const { data: res } = await this.$http.get('comment/list', {\n        params: {\n          pagesize: this.queryParam.pagesize,\n          pagenum: this.queryParam.pagenum,\n        },\n      })\n\n      if (res.status !== 200) {\n        if (res.status === 1004 || 1005 || 1006 || 1007) {\n          window.sessionStorage.clear()\n          this.$router.push('/login')\n        }\n        this.$message.error(res.message)\n      }\n      this.commentList = res.data\n      this.pagination.total = res.total\n    },\n\n    // 更改分页\n    handleTableChange(pagination, filters, sorter) {\n      var pager = { ...this.pagination }\n      pager.current = pagination.current\n      pager.pageSize = pagination.pageSize\n      this.queryParam.pagesize = pagination.pageSize\n      this.queryParam.pagenum = pagination.current\n\n      if (pagination.pageSize !== this.pagination.pageSize) {\n        this.queryParam.pagenum = 1\n        pager.current = 1\n      }\n      this.pagination = pager\n      this.getCommentList()\n    },\n\n    // 通过审核\n    commentCheck(id) {\n      this.$confirm({\n        title: '提示：请再次确认',\n        content: '要通过审核吗？',\n        onOk: async () => {\n          const { data: res_status } = await this.$http.get(`comment/info/${id}`)\n          if (res_status.data.status === 1) return this.$message.error('该评论已处于显示状态，无需审核')\n          const { data: res } = await this.$http.put(`checkcomment/${id}`, {\n            status: 1,\n          })\n          if (res.status != 200) return this.$message.error(res.message)\n          this.$message.success('审核成功')\n          this.getCommentList()\n        },\n        onCancel: () => {\n          this.$message.info('已取消')\n        },\n      })\n    },\n\n    // 撤下评论\n    commentUncheck(id) {\n      this.$confirm({\n        title: '提示：请再次确认',\n        content: '要撤下该评论吗？',\n        onOk: async () => {\n          const { data: res_status } = await this.$http.get(`comment/info/${id}`)\n          if (res_status.data.status === 2) return this.$message.error('该评论已处于未审核状态，无需撤下')\n          const { data: res } = await this.$http.put(`uncheckcomment/${id}`, {\n            status: 2,\n          })\n          if (res.status != 200) return this.$message.error(res.message)\n          this.$message.success('评论已撤下')\n          this.getCommentList()\n        },\n        onCancel: () => {\n          this.$message.info('已取消')\n        },\n      })\n    },\n\n    // 删除评论\n    deleteComment(id) {\n      this.$confirm({\n        title: '提示：请再次确认',\n        content: '要删除吗？',\n        onOk: async () => {\n          const { data: res } = await this.$http.delete(`delcomment/${id}`)\n          if (res.status != 200) return this.$message.error(res.message)\n          this.$message.success('删除成功')\n          this.getCommentList()\n        },\n        onCancel: () => {\n          this.$message.info('已取消')\n        },\n      })\n    },\n  },\n}\n</script>\n<style lang=\"\">\n</style>\n"]}]}