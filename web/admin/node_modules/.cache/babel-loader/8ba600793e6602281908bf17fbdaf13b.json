{"remainingRequest":"C:\\Users\\wakk\\Desktop\\ginblog-master\\web\\admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\wakk\\Desktop\\ginblog-master\\web\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\wakk\\Desktop\\ginblog-master\\web\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\wakk\\Desktop\\ginblog-master\\web\\admin\\src\\components\\editor\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\wakk\\Desktop\\ginblog-master\\web\\admin\\src\\components\\editor\\index.vue","mtime":1651118941000},{"path":"C:\\Users\\wakk\\Desktop\\ginblog-master\\web\\admin\\babel.config.js","mtime":1651118941000},{"path":"C:\\Users\\wakk\\Desktop\\ginblog-master\\web\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1659170820870},{"path":"C:\\Users\\wakk\\Desktop\\ginblog-master\\web\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1659170823565},{"path":"C:\\Users\\wakk\\Desktop\\ginblog-master\\web\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1659170820870},{"path":"C:\\Users\\wakk\\Desktop\\ginblog-master\\web\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1659170825069}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL3dha2svRGVza3RvcC9naW5ibG9nLW1hc3Rlci93ZWIvYWRtaW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwovLwovLwovLwovLwovLwovLwppbXBvcnQgRWRpdG9yIGZyb20gJ0B0aW55bWNlL3RpbnltY2UtdnVlJzsKaW1wb3J0ICcuL3RpbnltY2UubWluLmpzJzsKaW1wb3J0ICcuL2ljb25zL2RlZmF1bHQvaWNvbnMubWluLmpzJzsKaW1wb3J0ICcuLi8uLi9hc3NldHMvdGlueW1jZS90aGVtZXMvc2lsdmVyL3RoZW1lLm1pbi5qcyc7CmltcG9ydCAnLi9sYW5ncy96aF9DTic7IC8vIOazqOWGjOaPkuS7tgoKaW1wb3J0ICcuL3BsdWdpbnMvcHJldmlldy9wbHVnaW4ubWluLmpzJzsKaW1wb3J0ICcuL3BsdWdpbnMvcGFzdGUvcGx1Z2luLm1pbi5qcyc7CmltcG9ydCAnLi9wbHVnaW5zL3dvcmRjb3VudC9wbHVnaW4ubWluLmpzJzsKaW1wb3J0ICcuL3BsdWdpbnMvY29kZS9wbHVnaW4ubWluLmpzJzsKaW1wb3J0ICcuL3BsdWdpbnMvaW1hZ2UvcGx1Z2luLm1pbi5qcyc7CmltcG9ydCAnLi9wbHVnaW5zL2ltYWdldG9vbHMvcGx1Z2luLm1pbi5qcyc7CmltcG9ydCAnLi9wbHVnaW5zL21lZGlhL3BsdWdpbi5taW4uanMnOwppbXBvcnQgJy4vcGx1Z2lucy9jb2Rlc2FtcGxlL3BsdWdpbi5taW4uanMnOwppbXBvcnQgJy4vcGx1Z2lucy9saXN0cy9wbHVnaW4ubWluLmpzJzsKaW1wb3J0ICcuL3BsdWdpbnMvdGFibGUvcGx1Z2luLm1pbi5qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBFZGl0b3I6IEVkaXRvcgogIH0sCiAgcHJvcHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiB7CiAgICAgIGluaXQ6IHsKICAgICAgICBsYW5ndWFnZTogJ3poX0NOJywKICAgICAgICBoZWlnaHQ6ICc2MDBweCcsCiAgICAgICAgcGx1Z2luczogJ3ByZXZpZXcgcGFzdGUgd29yZGNvdW50IGNvZGUgaW1hZ2V0b29scyBpbWFnZSBtZWRpYSBjb2Rlc2FtcGxlIGxpc3RzIHRhYmxlJywKICAgICAgICBicmFuZGluZzogZmFsc2UsCiAgICAgICAgcGFzdGVfZGF0YV9pbWFnZXM6IHRydWUsCiAgICAgICAgdG9vbGJhcjogWyd1bmRvIHJlZG8gfCBzdHlsZXNlbGVjdCB8Zm9udHNpemVzZWxlY3R8IGJvbGQgaXRhbGljIHVuZGVybGluZSBzdHJpa2V0aHJvdWdoIHxhbGlnbmxlZnQgYWxpZ25jZW50ZXIgYWxpZ25yaWdodCBhbGlnbmp1c3RpZnkgfGJsb2NrcXVvdGUgcmVtb3ZlZm9ybWF0IHxudW1saXN0IGJ1bGxpc3QgdGFibGUnLCAncHJldmlldyBwYXN0ZSBjb2RlIGNvZGVzYW1wbGUgfGltYWdlIG1lZGlhJ10sCiAgICAgICAgLy/kuIrkvKDlm77niYcKICAgICAgICBpbWFnZXNfdXBsb2FkX2hhbmRsZXI6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciBfaW1hZ2VzX3VwbG9hZF9oYW5kbGVyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGJsb2JJbmZvLCBzdWNjRnVuLCBmYWlsRnVuKSB7CiAgICAgICAgICAgIHZhciBmb3JtZGF0YSwgX3lpZWxkJF90aGlzJCRodHRwJHBvLCByZXM7CgogICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgZm9ybWRhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgICAgICAgICAgICAgICBmb3JtZGF0YS5hcHBlbmQoJ2ZpbGUnLCBibG9iSW5mby5ibG9iKCksIGJsb2JJbmZvLm5hbWUoKSk7CiAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRodHRwLnBvc3QoJ3VwbG9hZCcsIGZvcm1kYXRhKTsKCiAgICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgICAgICBfeWllbGQkX3RoaXMkJGh0dHAkcG8gPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgICAgIHJlcyA9IF95aWVsZCRfdGhpcyQkaHR0cCRwby5kYXRhOwogICAgICAgICAgICAgICAgICAgIHN1Y2NGdW4ocmVzLnVybCk7CiAgICAgICAgICAgICAgICAgICAgZmFpbEZ1bihfdGhpcy4kbWVzc2FnZS5lcnJvcign5LiK5Lyg5Zu+54mH5aSx6LSlJykpOwoKICAgICAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgICAgIH0pKTsKCiAgICAgICAgICBmdW5jdGlvbiBpbWFnZXNfdXBsb2FkX2hhbmRsZXIoX3gsIF94MiwgX3gzKSB7CiAgICAgICAgICAgIHJldHVybiBfaW1hZ2VzX3VwbG9hZF9oYW5kbGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICB9CgogICAgICAgICAgcmV0dXJuIGltYWdlc191cGxvYWRfaGFuZGxlcjsKICAgICAgICB9KCksCiAgICAgICAgaW1hZ2V0b29sc19jb3JzX2hvc3RzOiBbJyonXSwKICAgICAgICBpbWFnZXRvb2xzX3Byb3h5OiAnJwogICAgICB9LAogICAgICBjb250ZW50OiB0aGlzLnZhbHVlCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZShuZXdWKSB7CiAgICAgIHRoaXMuY29udGVudCA9IG5ld1Y7CiAgICB9LAogICAgY29udGVudDogZnVuY3Rpb24gY29udGVudChuZXdWKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgbmV3Vik7CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;AAOA;AACA;AACA;AACA;AAEA,uB,CAEA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAA;AAAAC;AAAA,GADA;AAEAC;AACAC;AACAC,kBADA;AAEAC;AAFA;AADA,GAFA;AAQAC,MARA,kBAQA;AAAA;;AACA;AACAC;AACAC,yBADA;AAEAC,uBAFA;AAGAC,6FAHA;AAIAC,uBAJA;AAKAC,+BALA;AAMAC,kBACA,6KADA,EAEA,4CAFA,CANA;AAUA;AACAC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACAC,4BADA,GACA,cADA;AAEAA;AAFA;AAAA,2BAGA,oCAHA;;AAAA;AAAA;AAGAC,uBAHA,yBAGAV,IAHA;AAIAW;AACAC;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,WAXA;AAkBAC,oCAlBA;AAmBAC;AAnBA,OADA;AAsBAC;AAtBA;AAwBA,GAjCA;AAkCAC;AACAnB,SADA,iBACAoB,IADA,EACA;AACA;AACA,KAHA;AAIAF,WAJA,mBAIAE,IAJA,EAIA;AACA;AACA;AANA;AAlCA","names":["components","Editor","props","value","type","default","data","init","language","height","plugins","branding","paste_data_images","toolbar","images_upload_handler","formdata","res","succFun","failFun","imagetools_cors_hosts","imagetools_proxy","content","watch","newV"],"sourceRoot":"src/components/editor","sources":["index.vue"],"sourcesContent":["<template>\n  <div>\n    <Editor :init=\"init\" v-model=\"content\"></Editor>\n  </div>\n</template>\n\n<script>\nimport Editor from '@tinymce/tinymce-vue'\nimport './tinymce.min.js'\nimport './icons/default/icons.min.js'\nimport '../../assets/tinymce/themes/silver/theme.min.js'\n\nimport './langs/zh_CN'\n\n// 注册插件\nimport './plugins/preview/plugin.min.js'\nimport './plugins/paste/plugin.min.js'\nimport './plugins/wordcount/plugin.min.js'\nimport './plugins/code/plugin.min.js'\n\nimport './plugins/image/plugin.min.js'\nimport './plugins/imagetools/plugin.min.js'\nimport './plugins/media/plugin.min.js'\nimport './plugins/codesample/plugin.min.js'\nimport './plugins/lists/plugin.min.js'\nimport './plugins/table/plugin.min.js'\n\nexport default {\n  components: { Editor },\n  props: {\n    value: {\n      type: String,\n      default: '',\n    },\n  },\n  data() {\n    return {\n      init: {\n        language: 'zh_CN',\n        height: '600px',\n        plugins: 'preview paste wordcount code imagetools image media codesample lists table',\n        branding: false,\n        paste_data_images: true,\n        toolbar: [\n          'undo redo | styleselect |fontsizeselect| bold italic underline strikethrough |alignleft aligncenter alignright alignjustify |blockquote removeformat |numlist bullist table',\n          'preview paste code codesample |image media',\n        ],\n        //上传图片\n        images_upload_handler: async (blobInfo, succFun, failFun) => {\n          let formdata = new FormData()\n          formdata.append('file', blobInfo.blob(), blobInfo.name())\n          const { data: res } = await this.$http.post('upload', formdata)\n          succFun(res.url)\n          failFun(this.$message.error('上传图片失败'))\n        },\n        imagetools_cors_hosts: ['*'],\n        imagetools_proxy: '',\n      },\n      content: this.value,\n    }\n  },\n  watch: {\n    value(newV) {\n      this.content = newV\n    },\n    content(newV) {\n      this.$emit('input', newV)\n    },\n  },\n}\n</script>\n\n<style scoped>\n@import url('../../assets/tinymce/skins/ui/oxide/skin.min.css');\n@import url('../../assets/tinymce/skins/content/default/content.min.css');\n</style>\n"]}]}